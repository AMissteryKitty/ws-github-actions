name: continuous-integration # nom qu'on veut

on:
  push:
    branches-ignore: [ga-ignore-*]
  pull_request:
    branches-ignore: [ga-ignore-*]

jobs: # étape qu'il fera
    coding-style:
        name: Run Banana
        runs-on: ubuntu-latest
        container:
            image: ghcr.io/epitech/coding-style-checker:latest # run cette image du container
        steps:
          - name: Checkout GH repo
            uses: actions/checkout@master # master -> dernière version ou v4 -> version4 POUR SAVOIR QUELLE VERSION BANANA

          - name: Run coding-style checker
            run: check.sh $(pwd) $(pwd) # run coding-style

          - name: Report banana result
            run: | #pipe pour dire qu'il y aura plusieurs lignes de run / NB_ERROR cat combiné avec wc -l pour savoir le nb de lignes
                NB_ERROR=$(cat coding-style-reports.log | wc -l)
                if [ $NB_ERROR -gt 0 ]; then
                    ERROR=$(cat coding-style-reports.log)
                    echo "::error title=$NB_ERROR errors found::$ERROR"
                    exit 1
                fi
                exit 0

    compile:
      runs-on: ubuntu-latest
      steps:
          - name: Checkout GH repo
            uses: actions/checkout@master # init version

          - name: Compile repository
            run: make

          - name: Check binary presence # -f check un fichier swap... sinon echo file error
            run: |
              if [ ! -f ./swapupcase ]; then
                  echo "::error file=swapupcase,
                  title=Binary Error::Binary not found"
                  exit 1
              fi
              exit 0

    run-tests:
        runs-on: ubuntu-latest
        name: Run Unit & Integration Tests
        container: epitechcontent/epitest-docker:latest
        needs: [compile, coding-style] # si un de ces jobs fails, ne tourne pas

        steps:
          - name: Checkout GH repo
            uses: actions/checkout@master

          - name: Compile test binaries
            run: make compile_tests

          - name: Run unit tests
            run: ./unit_testing

          - name: Run integration tests
            run: ./integration_testing